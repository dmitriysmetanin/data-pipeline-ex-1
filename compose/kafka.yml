services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - my-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092  # брокер Kafka
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on: [zookeeper, kafka]
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    hostname: kafka
    environment:
      #  CONNECT_PLUGIN_PATH: "/usr/share/java"
       CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
       KAFKA_BROKER_ID: 1
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - my-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.0.1
    depends_on:
      kafka:
        condition: service_healthy
      app-db:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      CONNECT_JAVA_OPTS: "-Xms512m -Xmx1024m" 
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: 1
      CONNECT_CONFIG_STORAGE_TOPIC: connect_configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect_offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect_statuses
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_LOG_LEVEL: "DEBUG"
      CONNECT_METRICS_ENABLED: "false"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_REST_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    volumes:
      - ./docker/kafka-connect/plugins:/usr/share/confluent-hub-components
    networks:
      - my-network

  kafka-connect-init:
    image: curlimages/curl:latest
    depends_on:
      kafka-connect:
        condition: service_healthy
    command: >
      sh -c '
        echo "Waiting for Kafka Connect to start..."
        while ! curl -s http://kafka-connect:8083/ > /dev/null; do
          echo "Waiting for Kafka Connect REST API..."
          sleep 5
        done
        echo "Creating PostgreSQL connector..."
        curl -X POST -H "Content-Type: application/json" --data '"'"'{
          "name": "postgres-connector",
          "config": {
            "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
            "database.hostname": "app-db",
            "database.port": "5432",
            "database.user": "postgres",
            "database.password": "postgres",
            "database.dbname": "bank_oltp2",
            "database.server.name": "bank",
            "table.include.list": "public.*",
            "plugin.name": "pgoutput",
            "database.history.kafka.bootstrap.servers": "kafka:9092",
            "database.history.kafka.topic": "schema-changes.bank"
          }
        }'"'"' http://kafka-connect:8083/connectors
        echo "Connector creation completed"
      '
    networks:
      - my-network