# Generated by Django 5.2.2 on 2025-06-06 09:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account_number', models.BigIntegerField(unique=True)),
                ('account_name', models.TextField(blank=True, null=True)),
                ('created_dts', models.DateTimeField(auto_now=True)),
                ('open_date', models.DateTimeField(auto_now=True)),
                ('close_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField()),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('currency', models.TextField()),
            ],
            options={
                'db_table': 'accounts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CurrencyQuote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('USD', 'Доллар США'), ('EUR', 'Евро'), ('CNY', 'Юань')], max_length=3)),
                ('value', models.DecimalField(decimal_places=4, max_digits=12)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Котировка валюты',
                'verbose_name_plural': 'Котировки валют',
                'db_table': 'currency_quotes',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('tax_id', models.TextField(blank=True, null=True)),
                ('phone_number', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_dts', models.DateTimeField(auto_now=True)),
                ('updated_dts', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('description', models.TextField()),
                ('transaction_type', models.CharField(choices=[('deposit', 'Пополнение'), ('withdrawal', 'Снятие'), ('transfer', 'Перевод')], max_length=20)),
                ('another_account', models.BigIntegerField(blank=True, null=True)),
                ('account', models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounts.account')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
                'db_table': 'transactions',
            },
        ),
        migrations.CreateModel(
            name='CustomerAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.ForeignKey(db_column='account_id', on_delete=django.db.models.deletion.CASCADE, to='accounts.account')),
                ('customer', models.ForeignKey(db_column='customer_id', on_delete=django.db.models.deletion.CASCADE, to='accounts.customer')),
            ],
            options={
                'db_table': 'customer_accounts',
                'managed': True,
                'unique_together': {('customer', 'account')},
            },
        ),
    ]
